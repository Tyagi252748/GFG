class Solution {
public:
    int minimumCostOfBreaking(vector<int> X, vector<int> Y, int M, int N){
        M--;
        N--;
        sort(X.begin(), X.end(), greater<int>());
        sort(Y.begin(), Y.end(), greater<int>());
        
        int H_piece = 1;
        int V_piece = 1;
        int cost = 0;
        int i = 0;
        int j = 0;
        while(i < M && j < N){
            if(X[i] > Y[j]){
                cost += X[i]*V_piece;
                H_piece++;
                i++;
            }else{
                cost += Y[j]*H_piece;
                V_piece++;
                j++;
            }
        }
        while(i < M){
            cost += X[i]*V_piece;
            H_piece++;
            i++;            
        }
        while(j < N){
            cost += Y[j]*H_piece;
            V_piece++;
            j++;            
        }
        return cost;
    }
};