class Solution
{
    private:
    void merge(int arr[], int l, int m, int r)
    {
         int n1 = m-l+1;
         int n2 = r-m;
         int arr1[n1]={0};
         int arr2[n2]={0};
         for(int i = 0; i < n1; i++){
             arr1[i] = arr[l+i];
         }
           for(int j = 0; j < n2; j++){
             arr2[j] = arr[m+1+j];
         }
        int i = 0;
        int j = 0;
         int k = l;
        while(i < n1 && j < n2){
            if(arr1[i] < arr2[j]){
                arr[k++] = arr1[i++];
            }else{
                arr[k++] = arr2[j++];
            }
        }
        while(i < n1){
            arr[k++] = arr1[i++];
        }
         while(j < n2){
            arr[k++] = arr2[j++];
        }
         
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {
        if(l >= r){
            return;
        }
        int mid = (l + r)/2;
        mergeSort(arr, l, mid);
        mergeSort(arr, mid + 1, r);
        merge(arr, l, mid, r);
    }
};