class Solution
{
    public:
    //Function to sort a linked list of 0s, 1s and 2s.
    Node* segregate(Node *head) {
        
        if(head == NULL || head->next == NULL)return head;
        Node *zeros = new Node(0);
        Node *ones = new Node(0);
        Node *twos = new Node(0);
        
        Node *zero = zeros;
        Node *one = ones;
        Node *two = twos;
        
        Node *curr = head;
        while(curr != NULL){
            if(curr->data == 0){
                zero->next = curr;
                zero = zero->next;
                curr = curr->next;
            }else if(curr->data == 1){
                one->next = curr;
                one = one->next;
                curr = curr->next;                
            }else{
                two->next = curr;
                two = two->next;
                curr = curr->next;
            }
        }
        zero->next = ones->next ? ones->next : twos->next;
        one->next = twos->next;
        two->next = NULL;
        head = zeros->next;
        
        return head;
    }
};