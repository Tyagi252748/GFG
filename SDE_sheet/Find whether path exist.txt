class Solution
{
    public:
    //Function to find whether a path exists from the source to destination.
    bool is_Possible(vector<vector<int>>& grid) 
    {
        int n = grid.size();
        int m = grid[0].size();
        queue<pair<int, int>>q;
        
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(grid[i][j] == 1){
                    q.push({i, j});
                    break;
                }
            }
        }
        int delr[4] = {-1, 1, 0, 0};
        int delc[4] = {0, 0, -1 , 1};
        while(!q.empty()){
            int r = q.front().first;
            int c = q.front().second;
            q.pop();
            for(int i = 0; i < 4; i++){
                int nr = r + delr[i];
                int nc = c + delc[i];
                if(nr >= 0 && nr < n && nc >= 0 && nc < m){
                    if(grid[nr][nc] == 2)return true;
                    else if(grid[nr][nc] == 3)q.push({nr, nc});
                }
            }
        }
        return false;
    }
};