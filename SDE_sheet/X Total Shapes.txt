class Solution
{
    public:
    //Function to find the number of 'X' total shapes.
    void DFS(int r, int c, int n, int m, vector<vector<char>>& grid, vector<vector<int>>& vis){
        if(r < 0 || r >= n || c < 0 || c >= m || grid[r][c] == 'O' || vis[r][c])return;
        
        vis[r][c] = 1;
        int delr[4] = {-1, 1, 0, 0};
        int delc[4] = {0, 0, -1, 1};
        for(int i = 0; i < 4; i++){
            DFS(r + delr[i], c + delc[i], n, m, grid, vis);
        }
    }
    int xShape(vector<vector<char>>& grid) 
    {
        int n = grid.size();
        int m = grid[0].size();
        int ans = 0;
        vector<vector<int>>vis(n, vector<int>(m, 0));
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(grid[i][j] == 'X' && vis[i][j] == 0){
                    ans++;
                    DFS(i, j, n, m, grid, vis);
                }
            }
        }
        return ans;
    }
};