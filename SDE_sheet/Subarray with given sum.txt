class Solution
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        vector<int> ans;
        long long  sum = 0;
        int left = 0;
        int right = 0;
        for(int i = 0; i < n; i++){
            sum = sum + arr[i];
            
            while(sum > s){
                sum = sum - arr[left++];
            }
            if(sum == s && left <= i){
                ans.push_back(left + 1);
                ans.push_back(i + 1);
                
                // if only first array is required 
                // if all arrays are required than dont use break;
                break;
                
            }
        }
        if(ans.size() > 0){
            return ans;
        }else{
            ans.push_back(-1);
            return ans;
        }
    }
};