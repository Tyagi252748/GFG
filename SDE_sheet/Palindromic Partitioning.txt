class Solution{
public:
    bool ispalindrome(int i, int j, string str){
        int s = i;
        int e = j;
        while(s < e){
            if(str[s] != str[e])return false;
            
            s++;
            e--;
        }
        return true;
    }
    int solve(int i, int n, string str, vector<int> &dp){
        if(i == n)return 0;
        if(dp[i] != -1)return dp[i];
        int mincost = INT_MAX;
        for(int j = i; j < n; j++){
            if(ispalindrome(i, j, str)){
                int cost = 1 + solve(j + 1, n , str, dp);
                mincost = min(cost, mincost);
            }
        }
        return dp[i] = mincost;
    }
    int palindromicPartition(string str)
    {
        int n = str.size();
        vector<int> dp(n, -1);
        return solve(0, n, str, dp) - 1;
    }
};