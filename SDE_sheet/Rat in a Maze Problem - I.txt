class Solution{
    public:
    void solve(int r, int c, int n, vector<vector<int>> &m, string move, vector<string> &ans, 
               vector<vector<int>> &vis){
        
        if(r == n - 1 && c == n - 1){
            ans.push_back(move);
            return;
        }
        int delr[4] = {1, 0, 0, -1};
        int delc[4] = {0, -1, 1, 0};
        string dir = "DLRU";
        for(int i = 0; i < 4; i++){
            int nr = r + delr[i];
            int nc = c + delc[i];
            if(nr >= 0 && nr < n && nc >= 0 && nc < n && !vis[nr][nc] && m[nr][nc] == 1){
                vis[r][c] = 1;
                solve(nr, nc, n, m, move+dir[i], ans, vis);
                vis[r][c] = 0;
            }
        }
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        vector<string> ans;
        vector<vector<int>>vis(n, vector<int>(n, 0));
        if(m[0][0] == 1)solve(0, 0, n, m, "", ans, vis);
        return ans;
    }
};