class Solution 
{
    public:
    bool ispossible(int A[], int N, int M,int mid){
        int studentcount = 1;
        int pagecount = 0;
        for(int i = 0;i < N;i++){
            if(pagecount + A[i] <= mid){
                pagecount += A[i];
            }
            else{
                studentcount++;
                if(studentcount > M || A[i] > mid){
                    return false;
                }
                pagecount = A[i];
            }
        }
        return true;
    }
    int findPages(int A[], int N, int M) 
    {
        if(M > N){
            return -1;
        }
        int sum = 0;
        for(int i = 0; i < N;i++){
            sum = sum + A[i];
        }
        int start = 0;
        int end = sum;
        int ans = -1;
        while(start <= end){
            int mid = start + (end-start)/2;
            if(ispossible(A,N,M,mid)){
                ans = mid;
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }
        
        return ans;
    }
};