class Solution{
    public:
    // arr[] : int input array of integers
    // k : the quadruple sum required
    vector<vector<int> > fourSum(vector<int> &arr, int k) {
        int n = arr.size();
        vector<vector<int>> ans;
        if(arr.empty())return ans;
        sort(arr.begin(), arr.end());
        for(int i = 0; i < n; i++){
            for(int j = i + 1; j < n; j++){
                int req = k - arr[i] - arr[j];
                int s = j + 1;
                int e = n - 1;
                while(s < e){
                    if(arr[s] + arr[e] == req){
                        ans.push_back({arr[i], arr[j], arr[s], arr[e]});
                        while(s < e && arr[s] == arr[s + 1])s++;
                        while(s < e && arr[e] == arr[e - 1])e--;
                        s++;
                        e--;
                    }else if(arr[s] + arr[e] > req)e--;
                    else s++;
                }
                while(j + 1 < n && arr[j] == arr[j + 1])++j;
            }
            while(i + 1 < n && arr[i] == arr[i + 1])++i;
        }
        return ans;
    }
};