class Solution
{
  public:
    int findOnce(int arr[], int n)
    {
        int ans = 0;
        for(int i = 0; i < n; i++){
            ans = ans^arr[i];
        }
        return ans;
    }
};

                                    OR WITH TIME COMPLEXITY O(logN)


class Solution
{
  public:
    int findOnce(int arr[], int n)
    {
        if(n == 0)return arr[0];
        else if(arr[0] != arr[1])return arr[0];
        else if(arr[n - 1] != arr[n - 2])return arr[n - 1];
        
        int s = 0;
        int e = n - 1;
        while(s <= e){
            int mid = s + (e - s)/2;
            if(arr[mid] != arr[mid + 1] && arr[mid] != arr[mid - 1]){
                return arr[mid];
            }else if( ((mid % 2 == 0) && (arr[mid] == arr[mid + 1])) 
                   || ((mid % 2 == 1) && (arr[mid] == arr[mid - 1])) ){
                       s = mid + 1;
                   }else{
                       e = mid - 1;
                   }
        }
    }
};