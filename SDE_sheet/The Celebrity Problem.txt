class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        vector<int> degree(n);
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(M[i][j] == 1){
                    degree[i]--;
                    degree[j]++;
                }
            }
        }
        for(int i = 0; i < n; i++){
            if(degree[i] == n - 1)return i;
        }
        return -1;
    }
};


                         OR WITH BETTER TIME O(n)

class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        stack<int> st;
        for(int i = 0; i < n; i++){
            st.push(i);
        }
        while(st.size() >= 2){
            int i = st.top();
            st.pop();
            int j = st.top();
            st.pop();
            if(M[i][j] == 1)st.push(j);
            else st.push(i);
        }
        int cel = st.top();
        for(int i = 0; i < n; i++){
            if(i != cel){
                if(M[i][cel] == 0 || M[cel][i] == 1)return -1;
            }
        }
        return cel;
    }
};