class Solution{
public:
    int solve(int i, int j, vector<vector<int>> &Matrix, vector<vector<int>> &dp){
        if(j < 0 || j >= Matrix[0].size()) return -1e8;
        if(i == 0)return Matrix[0][j];
        
        if(dp[i][j] != -1)return dp[i][j];
        
        int u = Matrix[i][j] + solve(i - 1, j, Matrix, dp);
        int rd = Matrix[i][j] + solve(i - 1, j + 1, Matrix, dp);
        int ld = Matrix[i][j] + solve(i - 1, j - 1, Matrix, dp);
        return dp[i][j] = max(u, max(rd, ld));
    }
    int maximumPath(int N, vector<vector<int>> Matrix)
    {
        vector<vector<int>> dp(N, vector<int>(N,- 1));
        int maxi = -1e8;
        for(int i = 0; i <N; i++){
            maxi = max(maxi, solve(N - 1, i, Matrix, dp));
        }
        return maxi;
    }
};