class Solution
{
    public:
    Node* reverse(Node* head){
        if(head == NULL || head->next == NULL)return head;
        Node* chotahead = reverse(head->next);
        head->next->next = head;
        head->next = NULL;
        return chotahead;
    }
    //Function to add two numbers represented by linked list.
    struct Node* addTwoLists(struct Node* first, struct Node* second)
    {
        first = reverse(first);
        second = reverse(second);
        Node* Dummy = new Node(0);
        Node* temp = Dummy;
        int carry = 0;
        while(first != NULL || second != NULL || carry){
            int sum = 0;
            if(first != NULL){
                sum += first->data;
                first = first->next;
            }   
            if(second != NULL){
                sum += second->data;
                second = second->next;
            }
            sum += carry;
            carry = sum/10;
            Node* node = new Node(sum%10);
            temp->next = node;
            temp = temp->next;          
        }
        return reverse(Dummy->next);
    }
};