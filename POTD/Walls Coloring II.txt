class Solution{
public:
    int minCost(vector<vector<int>> &costs) {
        int n = costs.size();
        int k = costs[0].size();
        if(n == 0 || k == 0)return 0;
        
        vector<vector<int>> dp(n, vector<int>(k));
        int min1 = INT_MAX, min2 = INT_MAX;
        for(int i = 0; i < k; i++){
            dp[0][i] = costs[0][i];
            if(dp[0][i] < min1){
                min2 = min1;
                min1 = dp[0][i];
            }else if(dp[0][i] < min2){
                min2 = dp[0][i];
            }
        }
        if(n == 1)return min1;
        int cmin1 = INT_MAX, cmin2 = INT_MAX;
        for(int i = 1; i< n; i++){
            for(int j = 0; j < k; j++){
                if(dp[i - 1][j] != min1){
                    dp[i][j] = costs[i][j] + min1;
                }
                else{
                    dp[i][j] = costs[i][j] + min2;
                }
                if(dp[i][j] < cmin1){
                    cmin2 = cmin1;
                    cmin1 = dp[i][j];
                }else if(dp[i][j] < cmin2){
                    cmin2 = dp[i][j];
                }
            }
            min1 = cmin1;
            min2 = cmin2;
            cmin1 = INT_MAX, cmin2 = INT_MAX;
        }
        if(min1 < 0)return -1;
        
        return min1;
    }
};