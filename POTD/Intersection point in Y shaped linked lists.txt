class Solution
{
public:
    int countNode(Node *head)
    {
        Node *temp = head;
        int cnt = 0;
        while(temp != NULL){
            cnt++;
            temp = temp->next;
        }
        return cnt;
    }
    int intersection(int diff,Node *head1,Node *head2)
    {
        Node* curr1 = head1;
        Node* curr2 = head2;
        
        for(int i = 0; i < diff; i++){
            if(curr1 == NULL){
                return -1;
            }
            curr1 = curr1->next;
        }
        
        while(curr1!= NULL && curr2 != NULL){
            if(curr1 == curr2){
                return curr1->data;
            }
            curr1 = curr1->next;
            curr2 = curr2->next;
        }
        return -1;
    }
    int intersectPoint(Node* head1, Node* head2)
    {
        int d;
        int c1 = countNode(head1);
        int c2 = countNode(head2);
        if(c1 > c2){
             d = c1 - c2;
             return intersection(d,head1,head2);
        }else{
             d =c2 - c1;
             return intersection(d,head2,head1);
        }
    }
};