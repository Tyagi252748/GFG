class Solution {
  public:
    int shortestXYDist(vector<vector<char>> grid, int N, int M) {
        queue<pair<int, pair<int, int>>>q;
        vector<vector<int>> vis(N, vector<int>(M, 0));
        for(int i = 0; i < N; i++){
            for(int j = 0; j  < M; j++){
                if(grid[i][j] == 'X'){
                    q.push({0, {i , j}});
                    vis[i][j] = 1;
                }
            }
        }
        int r[] = {-1, 1, 0 ,0};
        int c[] = {0, 0, -1, 1};
        while(!q.empty()){
            auto it = q.front();
            int dist = it.first;
            int row = it.second.first;
            int clm = it.second.second;
            q.pop();
            if(grid[row][clm] == 'Y')return dist;
            for(int i = 0; i < 4; i++){
                int nr = row + r[i];
                int nc = clm + c[i];
                if(nr >= 0 && nr < N && nc >= 0 && nc < M && !vis[nr][nc]){
                    q.push({dist + 1, {nr, nc}});
                    vis[nr][nc] = 1;
                }
            }
            
        }
    }
};