class Solution{
    public:
    bool isPossible(vector<int>& sweetness, int N, int K, int mid){
        int frnds = 0;
        int swtcnt = 0;
        for(int i = 0; i < N; i++){
            swtcnt += sweetness[i];
            if(swtcnt >= mid){
                frnds++;
                swtcnt = 0;
            }
        }
        return frnds >= K+1;
    }
    int maxSweetness(vector<int>& sweetness, int N, int K) {
        int sum = 0;
        int mini = INT_MAX;
        for(int i = 0; i < N; i++){
            sum += sweetness[i];
            mini = min(mini, sweetness[i]);
        }
        int s = mini;
        int e = sum;
        int ans = 0;
        while(s <= e){
            int mid = s + (e - s)/2;
            if(isPossible(sweetness, N, K, mid)){
                ans = mid;
                s = mid + 1;
            }else{
                e = mid - 1;
            }
        }
        return ans;
    }
};